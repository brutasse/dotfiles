#!/usr/bin/env python
import os
import re
import subprocess
import sys

BASE_DPI = 120
letterspace = {
    1: '-1',
}
dpi_pattern = re.compile('Xft.dpi:        \d+')
letterspace_pattern = re.compile('URxvt.letterSpace: -?\d+')

base_kitty_dimensions = {"initial_window_width": 640,
                         "initial_window_height": 440}


if __name__ == '__main__':
    multiplicator = int(sys.argv[1])

    dpi = BASE_DPI * multiplicator

    xdefaults = os.path.expanduser('~/.Xdefaults')
    with open(xdefaults, 'r') as f:
        content = f.read()

    content = dpi_pattern.sub('Xft.dpi:        {0}'.format(dpi), content)
    content = letterspace_pattern.sub('URxvt.letterSpace: {0}'.format(
        letterspace.get(multiplicator, '0')), content)
    with open(xdefaults, 'w') as f:
        f.write(content)

    kitty = os.path.expanduser('~/.config/kitty/kitty.conf')
    with open(kitty, 'r') as f:
        content = f.read()

    for key, size in base_kitty_dimensions.items():
        new_size = size * multiplicator
        digit = r'\d+'
        content = re.sub(f'{key} {digit}', f'{key} {new_size}', content)

    with open(kitty, 'w') as f:
        f.write(content)

    with open(os.path.expanduser('~/.config/chromium-flags.conf'), 'w') as f:
        f.write('--force-device-scale-factor={0}\n'.format(multiplicator))

    ff_prefix = os.path.expanduser('~/.mozilla/firefox')
    [moz_dir] = [d for d in os.listdir(ff_prefix)
                 if d.endswith('.default')]
    with open(os.path.join(ff_prefix, moz_dir, 'user.js'), 'w') as f:
        f.write('user_pref("layout.css.devPixelsPerPx","{}");'.format(
            multiplicator
        ))

    #subprocess.check_call('xrandr --dpi {0}'.format(dpi), shell=True)
    subprocess.check_call('gsettings set org.gnome.desktop.interface '
                          'scaling-factor {0}'.format(multiplicator),
                          shell=True)
    subprocess.check_call(
        'xrdb -merge {0}'.format(xdefaults),
        shell=True,
    )
    subprocess.check_call('export QT_SCALE_FACTOR={0}'.format(multiplicator),
                          shell=True)
    subprocess.check_call('openbox --restart', shell=True)
